package com.toydbbackend.springbootserver.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.toydbbackend.springbootserver.model.Book;
import com.toydbbackend.springbootserver.repository.BookRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/book") // This means URL's start with /book (after Application path)

public class BookController {
    @Autowired // This means to get the bean called bookRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private BookRepository bookRepository;

    @GetMapping(path = "/all")
    public @ResponseBody Iterable<Book> getAllBooks() {
        // This returns a JSON or XML with the books
        return bookRepository.findAll();
    }

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody String addNewBook(@RequestParam String book_no, @RequestParam String title,
            @RequestParam String author, @RequestParam String publisher) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Book n = new Book();
        n.setBook_no(book_no);
        n.setTitle(title);
        n.setAuthor(author);
        n.setPublisher(publisher);
        bookRepository.save(n);
        return "Saved";
    }

}
